{
    "name": "@hookun/vlq",
    "publishConfig": {
        "access": "public"
    },
    "description": "A tool to encode/decode arbitrary unsigned integers using predefined-length chunk of bits.",
    "repository": {
        "type": "git",
        "url": "https://github.com/hookun/vlq"
    },
    "version": "0.0.8",
    "license": "Apache-2.0",
    "author": {
        "name": "Hookun",
        "email": "hookhookun@gmail.com",
        "url": "https://github.com/hookun"
    },
    "engines": {
        "node": ">=10"
    },
    "main": "lib/index.js",
    "files": [
        "lib"
    ],
    "scripts": {
        "build": "tsc",
        "test": "run-s test:*",
        "test:lint": "eslint --ext .ts src",
        "test:module": "ava",
        "preversion": "run-s preversion:*",
        "preversion:doc": "typedoc src/index.ts",
        "preversion:stage": "git add ."
    },
    "dependencies": {
        "@hookun/bitbybit": "^0.0.15"
    },
    "devDependencies": {
        "@typescript-eslint/eslint-plugin": "^5.7.0",
        "@typescript-eslint/parser": "^5.7.0",
        "ava": "^3.15.0",
        "eslint": "^8.5.0",
        "npm-run-all": "^4.1.5",
        "ts-node": "^10.4.0",
        "typedoc": "^0.22.10",
        "typedoc-plugin-markdown": "^3.11.8",
        "typescript": "^4.5.4"
    },
    "ava": {
        "extensions": [
            "ts"
        ],
        "require": [
            "ts-node/register"
        ]
    },
    "eslintConfig": {
        "extends": [
            "eslint:recommended",
            "plugin:@typescript-eslint/eslint-recommended",
            "plugin:@typescript-eslint/recommended"
        ],
        "parser": "@typescript-eslint/parser",
        "plugins": [
            "@typescript-eslint"
        ],
        "env": {
            "es6": true
        },
        "rules": {
            "quotes": "off",
            "semi": "off",
            "@typescript-eslint/semi": "error",
            "@typescript-eslint/quotes": [
                "error",
                "single"
            ],
            "@typescript-eslint/member-delimiter-style": [
                "error",
                {
                    "multiline": {
                        "delimiter": "comma",
                        "requireLast": true
                    },
                    "singleline": {
                        "delimiter": "comma",
                        "requireLast": false
                    }
                }
            ]
        }
    }
}
